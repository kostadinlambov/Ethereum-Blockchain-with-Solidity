{
	"id": "e1c3476a1ec567b388f5687a03e94044",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\ncontract ExceptionExample {\n\n    mapping(address => uint8) public balanceReceived;\n\n    function receiveMoney() public payable {\n        assert(msg.value == uint8(msg.value));\n        balanceReceived[msg.sender] += uint8(msg.value);\n        assert(balanceReceived[msg.sender] >= uint8(msg.value));\n    }\n\n    function withdrawMoney(address payable _to, uint8 _amount) public {\n        require(_amount <= balanceReceived[msg.sender], \"Not Enough Funds, aborting\");\n        assert(balanceReceived[msg.sender] >= balanceReceived[msg.sender] - _amount);\n        balanceReceived[msg.sender] -= _amount;\n        _to.transfer(_amount);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol": {
				"ExceptionExample": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceReceived",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "receiveMoney",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "_amount",
									"type": "uint8"
								}
							],
							"name": "withdrawMoney",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":57:693  contract ExceptionExample {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":57:693  contract ExceptionExample {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x67c114b8\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x6d26ec18\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd18a42e1\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":366:691  function withdrawMoney(address payable _to, uint8 _amount) public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_8\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":145:360  function receiveMoney() public payable {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":90:138  mapping(address => uint8) public balanceReceived */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":366:691  function withdrawMoney(address payable _to, uint8 _amount) public {... */\n    tag_8:\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":461:476  balanceReceived */\n      0x00\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":461:488  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":477:487  msg.sender */\n      caller\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":461:488  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":450:488  _amount <= balanceReceived[msg.sender] */\n      0xff\n      and\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":450:457  _amount */\n      dup2\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":450:488  _amount <= balanceReceived[msg.sender] */\n      0xff\n      and\n      gt\n      iszero\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":442:519  require(_amount <= balanceReceived[msg.sender], \"Not Enough Funds, aborting\") */\n      tag_16\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7420456e6f7567682046756e64732c2061626f7274696e67000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_16:\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":597:604  _amount */\n      dup1\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":567:582  balanceReceived */\n      0x00\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":567:594  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":583:593  msg.sender */\n      caller\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":567:594  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":567:604  balanceReceived[msg.sender] - _amount */\n      sub\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":536:604  balanceReceived[msg.sender] >= balanceReceived[msg.sender] - _amount */\n      0xff\n      and\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":536:551  balanceReceived */\n      0x00\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":536:563  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":552:562  msg.sender */\n      caller\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":536:563  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":536:604  balanceReceived[msg.sender] >= balanceReceived[msg.sender] - _amount */\n      0xff\n      and\n      lt\n      iszero\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":529:605  assert(balanceReceived[msg.sender] >= balanceReceived[msg.sender] - _amount) */\n      tag_17\n      jumpi\n      invalid\n    tag_17:\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":646:653  _amount */\n      dup1\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":615:630  balanceReceived */\n      0x00\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":615:642  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":631:641  msg.sender */\n      caller\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":615:642  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":615:653  balanceReceived[msg.sender] -= _amount */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      sub\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":663:666  _to */\n      dup2\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":663:675  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":663:684  _to.transfer(_amount) */\n      0x08fc\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":676:683  _amount */\n      dup3\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":663:684  _to.transfer(_amount) */\n      0xff\n      and\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_19:\n      pop\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":366:691  function withdrawMoney(address payable _to, uint8 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":145:360  function receiveMoney() public payable {... */\n    tag_10:\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":220:229  msg.value */\n      callvalue\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":201:230  msg.value == uint8(msg.value) */\n      0xff\n      and\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":201:210  msg.value */\n      callvalue\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":201:230  msg.value == uint8(msg.value) */\n      eq\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":194:231  assert(msg.value == uint8(msg.value)) */\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":278:287  msg.value */\n      callvalue\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":241:256  balanceReceived */\n      0x00\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":241:268  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":257:267  msg.sender */\n      caller\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":241:268  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":241:288  balanceReceived[msg.sender] += uint8(msg.value) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":342:351  msg.value */\n      callvalue\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":305:352  balanceReceived[msg.sender] >= uint8(msg.value) */\n      0xff\n      and\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":305:320  balanceReceived */\n      0x00\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":305:332  balanceReceived[msg.sender] */\n      dup1\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":321:331  msg.sender */\n      caller\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":305:332  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":305:352  balanceReceived[msg.sender] >= uint8(msg.value) */\n      0xff\n      and\n      lt\n      iszero\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":298:353  assert(balanceReceived[msg.sender] >= uint8(msg.value)) */\n      tag_22\n      jumpi\n      invalid\n    tag_22:\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":145:360  function receiveMoney() public payable {... */\n      jump\t// out\n        /* \"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":90:138  mapping(address => uint8) public balanceReceived */\n    tag_14:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207d992f2d501f7e82747e60f5435bb75473b3346dbdb8fd56abb619e21f1a4b6164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610457806100206000396000f3fe6080604052600436106100345760003560e01c806367c114b8146100395780636d26ec1814610097578063d18a42e1146100a1575b600080fd5b34801561004557600080fd5b506100956004803603604081101561005c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610109565b005b61009f61032f565b005b3480156100ad57600080fd5b506100f0600480360360208110156100c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610401565b604051808260ff16815260200191505060405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff168160ff1611156101d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4e6f7420456e6f7567682046756e64732c2061626f7274696e6700000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff160360ff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff16101561027857fe5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900460ff160392506101000a81548160ff021916908360ff1602179055508173ffffffffffffffffffffffffffffffffffffffff166108fc8260ff169081150290604051600060405180830381858888f1935050505015801561032a573d6000803e3d6000fd5b505050565b3460ff16341461033b57fe5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900460ff160192506101000a81548160ff021916908360ff1602179055503460ff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff1610156103ff57fe5b565b60006020528060005260406000206000915054906101000a900460ff168156fea26469706673582212207d992f2d501f7e82747e60f5435bb75473b3346dbdb8fd56abb619e21f1a4b6164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x457 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67C114B8 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xD18A42E1 EQ PUSH2 0xA1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x109 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9F PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420456E6F7567682046756E64732C2061626F7274696E67000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SUB PUSH1 0xFF AND PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT ISZERO PUSH2 0x278 JUMPI INVALID JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0xFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST CALLVALUE PUSH1 0xFF AND CALLVALUE EQ PUSH2 0x33B JUMPI INVALID JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0xFF AND PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT ISZERO PUSH2 0x3FF JUMPI INVALID JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x992F2D501F7E82747E60F5435BB75473B3346DBDB8FD56ABB619E21F1A4B PUSH2 0x6473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "57:636:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c806367c114b8146100395780636d26ec1814610097578063d18a42e1146100a1575b600080fd5b34801561004557600080fd5b506100956004803603604081101561005c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610109565b005b61009f61032f565b005b3480156100ad57600080fd5b506100f0600480360360208110156100c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610401565b604051808260ff16815260200191505060405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff168160ff1611156101d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4e6f7420456e6f7567682046756e64732c2061626f7274696e6700000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff160360ff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff16101561027857fe5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900460ff160392506101000a81548160ff021916908360ff1602179055508173ffffffffffffffffffffffffffffffffffffffff166108fc8260ff169081150290604051600060405180830381858888f1935050505015801561032a573d6000803e3d6000fd5b505050565b3460ff16341461033b57fe5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900460ff160192506101000a81548160ff021916908360ff1602179055503460ff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff1610156103ff57fe5b565b60006020528060005260406000206000915054906101000a900460ff168156fea26469706673582212207d992f2d501f7e82747e60f5435bb75473b3346dbdb8fd56abb619e21f1a4b6164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67C114B8 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x6D26EC18 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xD18A42E1 EQ PUSH2 0xA1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x109 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9F PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420456E6F7567682046756E64732C2061626F7274696E67000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SUB PUSH1 0xFF AND PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT ISZERO PUSH2 0x278 JUMPI INVALID JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0xFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST CALLVALUE PUSH1 0xFF AND CALLVALUE EQ PUSH2 0x33B JUMPI INVALID JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0xFF AND PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT ISZERO PUSH2 0x3FF JUMPI INVALID JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x992F2D501F7E82747E60F5435BB75473B3346DBDB8FD56ABB619E21F1A4B PUSH2 0x6473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "57:636:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;366:325;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;145:215;;;:::i;:::-;;90:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;366:325;461:15;:27;477:10;461:27;;;;;;;;;;;;;;;;;;;;;;;;;450:38;;:7;:38;;;;442:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;597:7;567:15;:27;583:10;567:27;;;;;;;;;;;;;;;;;;;;;;;;;:37;536:68;;:15;:27;552:10;536:27;;;;;;;;;;;;;;;;;;;;;;;;;:68;;;;529:76;;;;646:7;615:15;:27;631:10;615:27;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;663:3;:12;;:21;676:7;663:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;366:325;;:::o;145:215::-;220:9;201:29;;:9;:29;194:37;;;;278:9;241:15;:27;257:10;241:27;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;342:9;305:47;;:15;:27;321:10;305:27;;;;;;;;;;;;;;;;;;;;;;;;;:47;;;;298:55;;;;145:215::o;90:48::-;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "222200",
								"executionCost": "263",
								"totalCost": "222463"
							},
							"external": {
								"balanceReceived(address)": "1222",
								"receiveMoney()": "22914",
								"withdrawMoney(address,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 693,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 693,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 693,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 693,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 693,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 693,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 693,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 693,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 693,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 693,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 693,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 693,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 693,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 693,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 693,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 693,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 693,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 693,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 693,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 693,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 693,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207d992f2d501f7e82747e60f5435bb75473b3346dbdb8fd56abb619e21f1a4b6164736f6c634300060c0033",
									".code": [
										{
											"begin": 57,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "67C114B8"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "6D26EC18"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "D18A42E1"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 693,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 145,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 145,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 145,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 145,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 145,
											"end": 360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 145,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 145,
											"end": 360,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 366,
											"end": 691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 477,
											"end": 487,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 461,
											"end": 488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 450,
											"end": 457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 450,
											"end": 488,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 450,
											"end": 488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 442,
											"end": 519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 442,
											"end": 519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 442,
											"end": 519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 442,
											"end": 519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 442,
											"end": 519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F7420456E6F7567682046756E64732C2061626F7274696E67000000000000"
										},
										{
											"begin": 442,
											"end": 519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 442,
											"end": 519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 442,
											"end": 519,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 442,
											"end": 519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 597,
											"end": 604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 583,
											"end": 593,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 567,
											"end": 604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 536,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 552,
											"end": 562,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 536,
											"end": 563,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 536,
											"end": 563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 536,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 536,
											"end": 604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 536,
											"end": 604,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 536,
											"end": 604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 529,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 529,
											"end": 605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 529,
											"end": 605,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 529,
											"end": 605,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 529,
											"end": 605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 641,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 615,
											"end": 642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 642,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 615,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 615,
											"end": 653,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 615,
											"end": 653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 615,
											"end": 653,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 615,
											"end": 653,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 615,
											"end": 653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 615,
											"end": 653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 663,
											"end": 666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 663,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 663,
											"end": 684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 691,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 145,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 145,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 220,
											"end": 229,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 230,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 201,
											"end": 230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 201,
											"end": 210,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 230,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 194,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 194,
											"end": 231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 194,
											"end": 231,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 194,
											"end": 231,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 194,
											"end": 231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 287,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 241,
											"end": 256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 257,
											"end": 267,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 241,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 241,
											"end": 268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 241,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 241,
											"end": 268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 241,
											"end": 268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 241,
											"end": 268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 241,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 241,
											"end": 268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 241,
											"end": 268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 241,
											"end": 268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 241,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 241,
											"end": 268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 241,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 268,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 241,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 241,
											"end": 288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 241,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 342,
											"end": 351,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 305,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 305,
											"end": 352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 305,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 331,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 305,
											"end": 332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 305,
											"end": 332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 305,
											"end": 332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 305,
											"end": 332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 332,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 305,
											"end": 332,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 305,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 305,
											"end": 332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 305,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 305,
											"end": 352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 305,
											"end": 352,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 305,
											"end": 352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 298,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 298,
											"end": 353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 298,
											"end": 353,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 298,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 298,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 145,
											"end": 360,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 90,
											"end": 138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 90,
											"end": 138,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceReceived(address)": "d18a42e1",
							"receiveMoney()": "6d26ec18",
							"withdrawMoney(address,uint8)": "67c114b8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceReceived\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveMoney\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_amount\",\"type\":\"uint8\"}],\"name\":\"withdrawMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":\"ExceptionExample\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol\":{\"keccak256\":\"0xdb49fbb4454e51e2c6184f4a4b7ccc5b4f0bac1cb50c6fe8f1256351d0a95c36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41a928a8b6de43f84cf749c6e9572cf53c02a5c3a6fd718c6916d9e005886e79\",\"dweb:/ipfs/QmNq9L4RR7U9rJEyx8maRfhNKfafroE6eK3jR4Lb7G8bCt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol:ExceptionExample",
								"label": "balanceReceived",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint8)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint8)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint8)",
								"numberOfBytes": "32",
								"value": "t_uint8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol": {
				"ast": {
					"absolutePath": "contracts/BlockchainDevCourse/05.Smart_Wallet/ExceptionRequireExample.sol",
					"exportedSymbols": {
						"ExceptionExample": [
							90
						]
					},
					"id": 91,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 90,
							"linearizedBaseContracts": [
								90
							],
							"name": "ExceptionExample",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d18a42e1",
									"id": 5,
									"mutability": "mutable",
									"name": "balanceReceived",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 90,
									"src": "90:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
										"typeString": "mapping(address => uint8)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "98:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "90:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
											"typeString": "mapping(address => uint8)"
										},
										"valueType": {
											"id": 3,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "109:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "184:176:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 9,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "201:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "201:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 13,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "220:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 14,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "220:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 12,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "214:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 11,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "214:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "214:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "201:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 8,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "194:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "194:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "194:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 19,
															"name": "balanceReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "241:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																"typeString": "mapping(address => uint8)"
															}
														},
														"id": 22,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 20,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "257:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "257:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "241:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "278:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "278:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "272:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 23,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "272:5:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "272:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "241:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "241:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 31,
																	"name": "balanceReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "305:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																		"typeString": "mapping(address => uint8)"
																	}
																},
																"id": 34,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 32,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "321:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "321:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "305:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 37,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "342:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "342:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "336:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 35,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "336:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "336:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "305:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 30,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "298:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "298:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "298:55:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6d26ec18",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveMoney",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "166:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "184:0:0"
									},
									"scope": 90,
									"src": "145:215:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "432:259:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 52,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "450:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 53,
																	"name": "balanceReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "461:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																		"typeString": "mapping(address => uint8)"
																	}
																},
																"id": 56,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 54,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "477:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "477:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "461:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "450:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7420456e6f7567682046756e64732c2061626f7274696e67",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "490:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f2fbb422158b9c9e2fcb796cc4e0e3f306018d47a95a6ec70bd4666c5998143",
																"typeString": "literal_string \"Not Enough Funds, aborting\""
															},
															"value": "Not Enough Funds, aborting"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f2fbb422158b9c9e2fcb796cc4e0e3f306018d47a95a6ec70bd4666c5998143",
																"typeString": "literal_string \"Not Enough Funds, aborting\""
															}
														],
														"id": 51,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "442:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "442:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "442:77:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 62,
																	"name": "balanceReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "536:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																		"typeString": "mapping(address => uint8)"
																	}
																},
																"id": 65,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 63,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "552:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "552:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "536:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 66,
																		"name": "balanceReceived",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "567:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																			"typeString": "mapping(address => uint8)"
																		}
																	},
																	"id": 69,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 67,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "583:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 68,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "583:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "567:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 70,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "597:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "567:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "536:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "529:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "529:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "529:76:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 75,
															"name": "balanceReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "615:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
																"typeString": "mapping(address => uint8)"
															}
														},
														"id": 78,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 76,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "631:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "631:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "615:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 79,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "646:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "615:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "615:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 85,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "676:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 82,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "663:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "663:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "663:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "663:21:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "67c114b8",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawMoney",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "389:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "410:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 47,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "410:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "388:36:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:0:0"
									},
									"scope": 90,
									"src": "366:325:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 91,
							"src": "57:636:0"
						}
					],
					"src": "32:661:0"
				},
				"id": 0
			}
		}
	}
}